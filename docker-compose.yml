version: '3.8'

services:
  db:
    image: postgres:15
    container_name: vn_stock_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: vnstocks_production
      POSTGRES_USER: trader
      POSTGRES_PASSWORD: trader
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backup_before_trading_days_20250628.dump:/docker-entrypoint-initdb.d/backup.dump
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trader -d vnstocks_production"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - vn_stock_network

  redis:
    image: redis:7-alpine
    container_name: vn_stock_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - vn_stock_network

  web:
    build: .
    container_name: vn_stock_app
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      RAILS_ENV: production
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      DATABASE_URL: postgresql://trader:trader@db:5432/vnstocks_production
      REDIS_URL: redis://redis:6379/0
    ports:
      - "80:80"
    volumes:
      - ./storage:/rails/storage
      - ./log:/rails/log
    networks:
      - vn_stock_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  vn_stock_network:
    driver: bridge 