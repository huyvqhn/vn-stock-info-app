<%# Partial for rendering the advanced stock tickers table (used by both all.html.erb and 5d.html.erb) %>
<%# Required locals: records, presenter, table_id, table_title, is_aggregate_5d: true/false %>
<div class="mb-5">
  <h4><%= table_title %></h4>
  <table class="table table-striped table-bordered align-middle table-responsive" style="max-height: <%= is_aggregate_5d ? '1020px' : '1000px' %>; overflow-y: auto; position: relative; width: 100%;">
    <thead class="table-dark" style="position: sticky; top: 0; z-index: 2;">
    <tr>
      <th><div onclick="sortTable(this, '<%= table_id %>', 0)">Symbol</div></th>
      <th><div onclick="sortTable(this, '<%= table_id %>', 1)">Group</div></th>
      <th><div onclick="sortTable(this, '<%= table_id %>', 2)">Price Close</div></th>
      <th><div onclick="sortTable(this, '<%= table_id %>', 3)">Price Change</div></th>
      <th><div onclick="sortTable(this, '<%= table_id %>', 4)">Price Change %</div></th>
      <th>
        <div onclick="sortTable(this, '<%= table_id %>', 5, 'value')">Volume Total</div>
        <div onclick="sortTable(this, '<%= table_id %>', 5, 'vol_total_percent')" style="font-size: 0.9em; color: #6c757d;">% of Listed</div>
      </th>
      <th>
        <div onclick="sortTable(this, '<%= table_id %>', 6, 'value')">Volume Negotiated</div>
        <div onclick="sortTable(this, '<%= table_id %>', 6, 'percent')" style="font-size: 0.9em; color: #6c757d;">% of Total</div>
      </th>
      <th><div onclick="sortTable(this, '<%= table_id %>', 7)">Value Total</div></th>
      <th><div onclick="sortTable(this, '<%= table_id %>', 8)">Value Negotiated</div></th>
      <th>
        <div onclick="sortTable(this, '<%= table_id %>', 9, 'billion')">Value Foreign Net</div>
        <div onclick="sortTable(this, '<%= table_id %>', 9, 'percent')" style="font-size: 0.9em; color: #6c757d;">% of Total</div>
      </th>
      <th><div onclick="sortTable(this, '<%= table_id %>', 10)">Volume Foreign Net</div></th>
      <th><div onclick="sortTable(this, '<%= table_id %>', 11, 'billion')">Value Foreign Buy</div></th>
      <th><div onclick="sortTable(this, '<%= table_id %>', 12, 'abs_billion')">Value Foreign Sell</div></th>
      <th>
        <div onclick="sortTable(this, '<%= table_id %>', 13)">Foreign Capacity %</div>
        <div onclick="sortTable(this, '<%= table_id %>', 13, 'foreign_own_sub')">Foreign Own %</div>
      </th>
      <th><div onclick="sortTable(this, '<%= table_id %>', 14)">Value Proprietary Buy</div></th>
      <th><div onclick="sortTable(this, '<%= table_id %>', 15)">Value Proprietary Sell</div></th>
      <th>
        <div onclick="sortTable(this, '<%= table_id %>', 16, 'value')">Value Proprietary Net</div>
        <div onclick="sortTable(this, '<%= table_id %>', 16, 'percent')" style="font-size: 0.9em; color: #6c757d;">% of Total</div>
      </th>
    </tr>
    </thead>
    <tbody id="<%= table_id %>">
    <% if Array(records).present? %>
      <% Array(records).each do |rec| %>
        <% ticker = rec[:ticker] %>
        <% agg = rec[:aggregate] %>
        <% color = presenter.row_color(agg[:sum_price_change_pct]) %>
        <% vol_total = agg[:sum_volume_total].to_i %>
        <% vol_neg = agg[:sum_volume_negotiated] ? agg[:sum_volume_negotiated].to_i : 0 %>
        <% vol_neg_percent = vol_total > 0 ? ((vol_neg.to_f / vol_total) * 100).round(2) : 0 %>
        <% share_listed = agg[:last_share_listed] ? agg[:last_share_listed].to_i : 0 %>
        <% percent_foreign_net = vol_total > 0 ? ((agg[:sum_volume_foreign_net].to_f / vol_total * 100).round(2)) : 0 %>
        <% value_prop_buy = agg[:sum_value_proprietary_buy] ? agg[:sum_value_proprietary_buy].to_i : 0 %>
        <% value_prop_sell = agg[:sum_value_proprietary_sell] ? agg[:sum_value_proprietary_sell].to_i : 0 %>
        <% value_prop_net = value_prop_buy - value_prop_sell %>
        <% sum_value_total = agg[:sum_value_total] ? agg[:sum_value_total].to_i : 0 %>
        <% percent_prop_net = sum_value_total > 0 ? ((value_prop_net.to_f / sum_value_total) * 100).round(2) : 0 %>
        <% value_negotiated = agg[:sum_value_negotiated] ? agg[:sum_value_negotiated].to_i : 0 %>
        <% value_foreign_net = agg[:sum_value_foreign_net] ? agg[:sum_value_foreign_net].to_i : 0 %>
        <% volume_foreign_net = agg[:sum_volume_foreign_net] ? agg[:sum_volume_foreign_net].to_i : 0 %>
        <% value_foreign_buy = agg[:sum_value_foreign_buy] ? agg[:sum_value_foreign_buy].to_i : (agg[:sum_value_foreign_buy] == 0 ? 0 : (agg[:sum_volume_foreign_buy] ? agg[:sum_volume_foreign_buy].to_i : 0)) %>
        <% value_foreign_sell = agg[:sum_value_foreign_sell] ? agg[:sum_value_foreign_sell].to_i : (agg[:sum_value_foreign_sell] == 0 ? 0 : (agg[:sum_volume_foreign_sell] ? agg[:sum_volume_foreign_sell].to_i : 0)) %>
        <% share_foreign_own_rate = agg[:last_share_foreign_own_rate] ? agg[:last_share_foreign_own_rate].to_f.round(2) : '' %>
        <tr>
          <td style="background-color: <%= color %>; position: relative; cursor: pointer;">
            <span class="symbol-tooltip-trigger"><%= ticker.symbol %></span>
            <div class="symbol-tooltip-table" style="display:none; position:absolute; left:100%; top:100%; z-index:10; background:#fff; border:1px solid #ccc; box-shadow:0 2px 8px rgba(0,0,0,0.15); padding:8px; min-width:180px;">
              <table class="table table-bordered table-sm mb-0" style="font-size:0.95em;">
                <thead>
                  <tr><th>Level</th><th colspan="2" class="text-center">Bid</th><th colspan="2" class="text-center">Ask</th></tr>
                  <tr>
                    <th></th><th>Price</th><th>Vol</th>
                    <th>Price</th><th>Vol</th>
                  </tr>
                </thead>
                <tbody>
                  <% 1.upto(3) do |i| %>
                    <tr>
                      <td style="<%= i == 1 ? 'font-weight:bold;' : '' %>"><%= i %></td>
                      <td style="<%= i == 1 ? 'font-weight:bold;' : '' %>"><%= ticker.try("market_depth_bid_price_#{i}").present? ? (ticker.try("market_depth_bid_price_#{i}").to_f / 1000.0).round(1) : '-' %></td>
                      <td style="<%= i == 1 ? 'font-weight:bold;' : '' %>"><%= ticker.try("market_depth_bid_volume_#{i}").present? ? number_with_delimiter(ticker.try("market_depth_bid_volume_#{i}")) : '-' %></td>
                      <td style="<%= i == 1 ? 'font-weight:bold;' : '' %>"><%= ticker.try("market_depth_ask_price_#{i}").present? ? (ticker.try("market_depth_ask_price_#{i}").to_f / 1000.0).round(1) : '-' %></td>
                      <td style="<%= i == 1 ? 'font-weight:bold;' : '' %>"><%= ticker.try("market_depth_ask_volume_#{i}").present? ? number_with_delimiter(ticker.try("market_depth_ask_volume_#{i}")) : '-' %></td>
                    </tr>
                  <% end %>
                </tbody>
              </table>
            </div>
          </td>
          <td style="background-color: <%= color %>"><%= ticker.group&.name %></td>
          <td style="background-color: <%= color %>"><%= agg[:last_price_close].present? ? (agg[:last_price_close].to_f / 1000.0).round(1) : '' %></td>
          <td style="background-color: <%= color %>"><%= number_with_delimiter(agg[:sum_price_change].to_i) %></td>
          <td style="background-color: <%= color %>" ><%= number_with_delimiter(agg[:sum_price_change_pct]) %> %</td>
          <td style="background-color: <%= color %>"> 
            <%= number_with_delimiter(vol_total) %>
            <% if share_listed > 0 %>
              <% percent_of_listed = ((vol_total.to_f / share_listed) * 100).round(2) %>
              <div class="vol-total-percent" style="font-weight: <%= percent_of_listed > 2 ? 'bold' : 'normal' %>;color: <%= percent_of_listed > 2 ? '#d9534f' : '#6c757d' %>; font-size: 0.95em;">
                (<%= percent_of_listed %>%)
              </div>
            <% end %>
          </td>
          <td style="background-color: <%= color %>; font-weight: <%= vol_neg_percent > 20 ? 'bold' : 'normal' %>">
            <%= number_with_delimiter(vol_neg) %>
            <div style="font-weight: <%= vol_neg_percent > 20 ? 'bold' : 'normal' %>; color: <%= vol_neg_percent > 20 ? '#d9534f' : '#6c757d' %>; font-size: 0.95em;">
              (<%= vol_neg_percent %> %)
            </div>
          </td>
          <td style="background-color: <%= color %>"><%= display_billion(sum_value_total) %></td>
          <td style="background-color: <%= color %>"><%= display_billion(value_negotiated) %></td>
          <td style="background-color: <%= color %>; font-weight: <%= percent_foreign_net.abs > 10 ? 'bold' : 'normal' %>">
            <%= display_billion(value_foreign_net) %>
            <div style="font-weight: bold; color: <%= percent_foreign_net > 0 ? '#198754' : '#dc3545' %>; font-size: 0.95em;">
              (<%= percent_foreign_net %> %)
            </div>
          </td>
          <td style="background-color: <%= color %>"><%= number_with_delimiter(volume_foreign_net) %></td>
          <td style="background-color: <%= color %>;"><span style="color: #198754; font-weight: bold;"><%= display_billion(value_foreign_buy) %></span></td>
          <td style="background-color: <%= color %>;"><span style="color: #dc3545; font-weight: bold;">-<%= display_billion(value_foreign_sell.abs) %></span></td>
          <td style="background-color: <%= color %>">
            <%= share_foreign_own_rate %> %
            <% if agg[:share_foreign_max_allowed] && agg[:share_foreign_add_allowed] && share_listed > 0 %>
              <div style="font-size:0.95em;color:#6c757d;">
                (<%= (((agg[:share_foreign_max_allowed].to_f - agg[:share_foreign_add_allowed].to_f) / share_listed) * 100).round(2) %>%)
              </div>
            <% end %>
          </td>
          <td style="background-color: <%= color %>"><%= display_billion(value_prop_buy) %></td>
          <td style="background-color: <%= color %>"><%= display_billion(value_prop_sell) %></td>
          <td style="background-color: <%= color %>; font-weight: <%= percent_prop_net.abs > 10 ? 'bold' : 'normal' %>">
            <%= "#{(value_prop_net.to_f / 1_000_000_000).round(3)}B" %>
            <div style="font-weight: <%= percent_prop_net.abs > 10 ? 'bold' : 'normal' %>; color: <%= percent_prop_net > 0 ? '#198754' : (percent_prop_net < 0 ? '#dc3545' : '#6c757d') %>; font-size: 0.95em;">
              (<%= percent_prop_net %> %)
            </div>
          </td>
        </tr>
      <% end %>
    <% else %>
      <tr><td colspan="18" class="text-center">No data available.</td></tr>
    <% end %>
    </tbody>
  </table>
</div>

<script>
  // ...existing code...
  function sortTable(header, tableId, colIndex, sortType = 'value') {
    var table = header.closest('table');
    var tbody = table.tBodies[0];
    var rows = Array.from(tbody.rows);
    // For percentage columns, default to descending on first click
    if (sortType === 'vol_total_percent') {
      header.asc = header.asc === undefined ? false : !header.asc;
    } else {
      header.asc = !header.asc;
    }
    var asc = header.asc;

    rows.sort(function(a, b) {
      function extractValue(element, type) {
        var cell = element.cells[colIndex];
        var text = cell.innerText.replace(/,/g, '');
        if (type === 'vol_total_percent') {
          // Only extract from the .vol-total-percent div for this column
          var percentDiv = cell.querySelector('.vol-total-percent');
          if (percentDiv) {
            var percentMatch = percentDiv.innerText.match(/\(([-\d.]+)/);
            return percentMatch ? parseFloat(percentMatch[1]) : 0;
          }
          // Fallback: try to find percentage in the main text
          var percentInText = text.match(/\(([-\d.]+)/);
          return percentInText ? parseFloat(percentInText[1]) : 0;
        } else if (type === 'percent') {
          // For other percent columns, use the first div or text
          var percentDiv = cell.querySelector('div');
          if (percentDiv) {
            var percentMatch = percentDiv.innerText.match(/\(([-\d.]+)/);
            return percentMatch ? parseFloat(percentMatch[1]) : 0;
          }
          var percentInText = text.match(/\(([-\d.]+)/);
          return percentInText ? parseFloat(percentInText[1]) : 0;
        }
        return isNaN(text) ? text : parseFloat(text);
      }

      var aValue = extractValue(a, sortType);
      var bValue = extractValue(b, sortType);
      if (aValue === bValue) return 0;
      if (aValue === -Infinity) return 1;
      if (bValue === -Infinity) return -1;
      return (aValue < bValue ? -1 : 1) * (asc ? 1 : -1);
    });

    rows.forEach(function(row) {
      tbody.appendChild(row);
    });
  }
  // ...existing code...
</script>
